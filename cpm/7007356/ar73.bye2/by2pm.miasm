;*****************************************************************
;     Potomic Micro Magic Incorporated modem routines for ByeII.
;		Version 1.0    by Paul Traina
;
;	These routines will allow the easy patching of ByeII for any 
; type of modem/serial port combination.  Certain routines must return
; status flags, so please be careful to set the flags as directed.
;
; This version is for the PMMI S100 modem card.
;
;Current revision history: (in reverse order to minimize reading time)
;
;11/28/82  Fixed some conventions in file format, cleaned up for distribution.
;									(pst)
;11/27/82  Fixed mdcarck and mdring routines to work with pmmi convention.
;	   corrected syntax errors with 8bit.  frank gaude'
;
;11/25/82: Routines added, no fuss, mess, or frills... (pst)
;
;
;
;The following define the port address for the PMMI card.
;
BASEP	EQU	0C0h		;Base port for PMMI modem
;
;******************************************************************************
;
; Modem port equates
;
TPORT	EQU	BASEP	;control port #1
DPORT	EQU	BASEP+1 ;data port
RPORT	EQU	BASEP+2 ;baud rate generator/modem status
CPORT	EQU	BASEP+3 ;modem control port
;
; Switch hook and modem commands, output to TPORT (port 0)
;
BYE	EQU	0	;hang up
ANSW	EQU	2	;off hook, answer mode
BIT8	EQU	0Ch	;8 data bits
NOPY	EQU	10h	;no parity
TSB	EQU	40h	;2 stop bits
NORM	EQU	BIT8+NOPY	;normal, 8 bits, no parity
P110	EQU	BIT8+NOPY+TSB	;same w/2 stop bits
;
; Modem status, input on RPORT (port 3)
;
DTD	EQU	1	;dial tone detect
RDET	EQU	2	;ring detect
CTS	EQU	4	;CTS (carrier detect)
CONN	EQU	10h	;connected? (0=yes, 1=modem hung up)
;
; Control port values for filter mask
;
LE300	EQU	7Fh	;less than or equal to 300 baud
GT300	EQU	5Fh	;greater than 300 baud
;
; PMMI modem status masks
;
TBMT	EQU	1	;xmit buffer empty
DAV	EQU	2	;data available
OE	EQU	10h	;overrun error
FE	EQU	20h	;framing error
;
; Baud rate divisors
;
B110	EQU	142	;110 baud
B300	EQU	52	;300 baud
B450	EQU	35	;450 baud
B600	EQU	26	;600 baud
B710	EQU	22	;710 baud
;
***************************************************************************
* If any of your routines zaps anything other than the Accumulator, then  *
* you must preserve all other registers.  If you don't,  ByeII may barf.  *
***************************************************************************
;
; This routine should turn off everything on the modem, and get it ready to
; wait for a ring.  (Also hang it up)
;
MDINIT:	EQU	$+OFFSET
	XRA	A		;get disconnect value
	OUT	TPORT		;reset orig/answer
	OUT	CPORT		;turn off DTR, do break
	RET
;
;The following is a routine to determine if there is a character waiting
;to be received,  if none are there,  the Zero flag will be set, otherwise,
;255 will be returned in register A.  Remember that the system may like you
;a little more if you also mask out framing, parity, and overrun errors.
;(but on some modems, you can't because of problems with the baud rate
;selection.)
;
MDINST:	EQU	$+OFFSET
	IN	TPORT	;get status
	ANI	DAV	;data available?
	RZ		;return if not ready
	IN	TPORT	;get status
	ANI	FE+OE	;check for framing and overrun bits
	JZ	MDINST1	;no errors...legit character
	IN	DPORT	;swallow character (clears DAV)
	XRA	A	;return false
	RET

MDINST1	EQU	$+OFFSET
	ORI	0FFH		;we got something...
	RET
;
;The following is a routine to determine if the transmit buffer is empty,
;if it isn't, then it will return with the Zero flag set.  If the transmitter
;is not empty, it will return with Zero clear.
;
MDOUTST	EQU	$+OFFSET
	IN	TPORT	;get modem status
	ANI	TBMT	;transmit buffer empty
	RET
;
;The following is a routine that will check to make sure we still have carrier
;If there is no carrier, it will return with the Zero flag set.
;
MDCARCK EQU	$+OFFSET
	IN	RPORT		;get status of modem
	CMA			;reverse for pmmi convention
	ANI	CTS		;clear to send?
	RET
;
;The following routine will check to see if the phone is ringing, if it isn't,
;it will return with Zero set, otherwise Zero will be cleared.
;
MDRING:	EQU	$+OFFSET
	IN	RPORT		;get ring status
	CMA			;reverse for pmmi convention
	ANI	RDET		;mask all but ring
	RET
;
;The following is a routine that will input one character from the modem
;port.  If there is nothing there, it will return garbage... so use the
;MDINST routine first.
;
MDINP:	EQU	$+OFFSET
	IN	DPORT		;get character
	ANI	7FH		;strip parity and other garbage
	RET
;
;The following is a routine that will output one character in register A
;to the modem.  REMEMBER, that is register A, not register C.
;   ** Use MDOUTST first to see if buffer is empty **
;
MDOUTP:	EQU	$+OFFSET
	OUT	DPORT		;send it
	RET
;
;The following routine will make the modem answer the phone.
;It should also set baud rate to 300 baud.
;
MDANSW:	EQU	$+OFFSET
	MVI	A,LE300		;filter value for 300 baud (dtr)
	OUT	CPORT
	CALL	DELAY		;give time to turn on (.1 sec)
	MVI	A,P110+ANSW	;answer phone
	OUT	TPORT
	CALL	DELAY		;give time for answer
	CALL	UCSTS		;clear console buffer (why? -pst)
	IN	DPORT		;clear modem port
	IN	DPORT		;make sure it's clear
	CALL	SET300		;set modem for 300 baud
	RET
;
;These next routines set the proper baud rates for the modem.  If you do
;not support the particular rate, then simply put in a JMP to SETINV.
;If the baud rate change was successful, make SURE the Zero flag is set.
;
;The following routine returns a 255 because we were not able to set to
;the proper baud rate because either the serial port or the modem can't
;handle it.
;
SETINV:	EQU	$+OFFSET
	MVI	A,0FFH
	ORA	A		;make sure the Zero flag isn't set
	RET
;
; Set up for 110 baud
;
SET110:	EQU	$+OFFSET
	MVI	A,LE300		;set filter value to less than 300 baud
	OUT	CPORT
	MVI	A,P110		; 8 data bits, no parity, 2 stop bits
	OUT	TPORT
	MVI	A,B110		; 110 baud
	OUT	RPORT
	XRA	A		;return 110 as a valid rate
	RET
;
; Set up for 300 baud
;
SET300:	EQU	$+OFFSET
	MVI	A,LE300		;set filter value to less than or = 300 baud
	OUT	CPORT
	MVI	A,NORM		;set for 8 data bits, no parity, 1 stop bit
	OUT	TPORT
	MVI	A,B300		;set divisor to 300 baud
	OUT	RPORT
	XRA	A		;return with 300 baud as a valid rate
	RET
;
; Set up for 450 baud
;
SET450:	EQU	$+OFFSET
	MVI	A,GT300		;set filter value for >300 baud
	OUT	CPORT
	MVI	A,NORM		;set for 8 data bits, no parity, 1 stop bit
	OUT	TPORT
	MVI	A,B450		;set for 450 baud
	OUT	RPORT
	XRA	A		;return saying 450 is ok
	RET
;
; Set up for 600 baud
;
SET600:	EQU	$+OFFSET
	MVI	A,GT300		;set filter value for >300 baud
	OUT	CPORT
	MVI	A,NORM		;set for 8 data bits, no parity, 1 stop bit
	OUT	TPORT
	MVI	A,B600		;set for 600 baud
	OUT	RPORT
	XRA	A		;return saying 600 baud is valid
	RET
;
; Set up for 710 baud
;
SET710:	EQU	$+OFFSET
	MVI	A,GT300		;set filter value for >300 baud
	OUT	CPORT
	MVI	A,NORM		;set for 8 data bits, no parity, 1 stop bit
	OUT	TPORT
	MVI	A,B710		;set for 710 baud
	OUT	RPORT
	XRA	A		;return saying 710 baud is valid
	RET
;
; Set up for 1200 baud
;
SET1200	EQU	$+OFFSET
	JMP	SETINV		;you aren't serious... are you???
;
; Ok, that's all of the modem dependant routines that ByeII uses, so if
; you patch this file into your copy of ByeII, then it should work out well.
;
; If you have any problems, give me a call and I can specify further details.
;				Paul Traina -- 11/27/82
;
;			END (of ByePMMI but not program)
*****************************************************************************
