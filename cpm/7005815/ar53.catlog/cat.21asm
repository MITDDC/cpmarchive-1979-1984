;
;Version 2.1
;CAT.ASM - PERFORMS DIR FUNCTION ON MAST.CAT
;
;11/??/77 WRITTEN BY WARD CHRISTENSEN
;01/07/78 MODIFY FOR NON-BASIC MASTER CAT
;01/08/78 MODIFY TO SKIP IGNORE FILENAMES
;09/07/82 Modified to include improved formatting option
;	  for 80 column terminal/printer. Also changed
;	  to make output of information requested and
;	  date easier to read.
;
;TO EXECUTE:
;	CAT FILENAME.FILETYPE DISKNAME.DISKTYPE
;COMMAND MAY BE FOLLOWED BY COMMENTS (TITLE)
;MAST.CAT M-U-S-T HAVE IGNORE FILENAMES FIRST
;EG:	(NAME.TYPE
;	NAME.TYPE
;	LASTNAME.TYPE)
;
FALSE	EQU	0
TRUE	EQU	NOT FALSE
;
WIDE	EQU	TRUE	;SET TO FALSE FOR TERMINAL OR PRINTER
			;WITH FEWER THAN 80 COLUMNS
;
	IF	NOT WIDE
WADD1	EQU	0
WADD2	EQU	0
	ENDIF	;NOT WIDE
;
	IF	WIDE
WADD1	EQU	5
WADD2	EQU	7
	ENDIF	;WIDE
;
	ORG	100H
;
;INIT LOCAL STACK
	LXI	H,0
	DAD	SP
	SHLD	STACK
	LXI	SP,STACK
;PRINT ID MESSAGE
	CALL	ILPRT
	DB	0DH,0AH
	DB	'CAT.COM as of 09/07/82'
	DB	0DH,0AH
	DB	'Original Version by Ward Christensen'
	DB	0DH,0AH,0DH,0AH,0CH,0
;SAVE THE NAMES
	LXI	D,FCB+1
	LXI	H,FNAME
	MVI	B,8
	CALL	MOVER
	MVI	B,3
	CALL	MOVER
	LXI	D,FCB+17 ;DISK NAME
	LXI	H,DNAME
	MVI	B,8
	CALL	MOVER
	MVI	B,3
	CALL	MOVER
;MOVE 'MAST.CAT' TO FCB
	LXI	D,FCBNAME
	LXI	H,FCB+1
	MVI	B,8+3+1
	CALL	MOVE
;SAVE THE COMMAND LINE AS THE TITLE
;ALLOWS 'CAT *.* *.* MM/DD/YY' TYPE TITLE
;FOR HARD COPY LISTINGS
	LXI	D,80H
	LXI	H,TTL0
	LDAX	D	;GET LENGTH
	MOV	C,A	;SAVE IN C
	ORA	A	;NO OPERANDS ON CAT?
	JZ	NOOP0	;GO IF SO
	PUSH	D	
	LXI	D,FILMSG	;LOAD FILE MESSAGE
	MVI	B,22		;22 CHARACTERS LONG
	CALL	MOVE		;MOVE IT
	POP	D
	MVI	B,1		;START STRING COUNTER
	INX	D		;GO PAST FIRST SPACE
	CALL	STRTST		;GET FIRST STRING
	MOV	A,C		;IF WE RUN OUT STRTST
	ORA	A		;SETS C TO 0
	JZ	NOOP		;GO IF RAN OUT
	PUSH	D
	PUSH	B
	LXI	D,DSKMSG	;GET DISK MESSAGE
	MVI	B,30		;30 CHARACTERS LONG
	CALL	MOVE		;MOVE IT
	POP	B
	POP	D
	CALL	STRTST		;GET SECOND STRING
	MOV	A,C		;IF WE RUN OUT STRTST
	ORA	A		;SETS C TO 0
	JZ	NOOP		;GO IF RAN OUT
	PUSH	D
	PUSH	B
	LXI	D,DATMSG	;GET DATE MESSAGE
	MVI	B,12		;12 CAHRACTERS LONG
	CALL	MOVE		;MOVE IT
	POP	B
	POP	D
	CALL	STRTST		;GET THIRD STRING
NOOP0	LXI	D,NOSPEC	;PRINT MESSAGE THAT
	MVI	B,21		;ALL MAST.CAT IS COMING
	CALL	MOVE
NOOP	MVI	M,0	;END OF TITLE
	INX	H
	MVI	M,0C9H	;PUT RET AFTER TITLE
;OPEN MAST.CAT
	LXI	D,FCB
	MVI	C,OPEN
	CALL	BDOS
	INR	A
	JNZ	SKPIGN	;SKIP THE 'TO BE IGNORED' NAMES
;OPEN FAILED
;EXIT PRINTING MSG ON TOP OF STACK
	CALL	ILPRT
	DB	'++UNABLE TO OPEN MAST.CAT++',0
;RESTORE STACK, EXIT
EXIT	LHLD	STACK
	SPHL
	RET
;
STRTST	PUSH	B	;SAVE END OF OLD STRING
	INX	D	;GET START OF NEW STRING
	PUSH	D	;SAVE START OF STRING
;
STRLP	INR	B	;ADD ONE MORE TO LENGTH OF STRING
	MOV	A,C	;GET END OF STRING IN A
	CMP	B	;ARE WE AT END
	JZ	ENDSTR	;GO IF SO
	INX	D	;BUMP TO NEXT LOCATION
	LDAX	D	;GET NEXT CHARACTER IN STRING INTO A
	CPI	' '	;COMPARE FOR SPACE
	JNZ	STRLP	;LOOP IF NO SPACE
	JMP	NOTEND
ENDSTR	MVI	C,0	;FLAG FOR END
NOTEND	POP	D	;GET THE START OF STRING
	POP	PSW	;GET END OF PREVIOUS STRING IN A
	PUSH	B	;PUT NEW END ON STACK
	PUSH	B	;SAVE IT AGAIN
	MOV	B,A	;PUT OLD END IN B
	POP	PSW	;GET NEW END IN A
	SUB	B	;LENGTH OF NEW STRING
	MOV	B,A	;SET UP FOR MOVE
	CALL	MOVE
	POP	B
	RET
;
;SKIP THE IGNORE FILENAMES AT THE HEAD OF MAST.CAT
;
SKPIGN	CALL	RDCHR
	CPI	')'	;END OF IGNORE?
	JNZ	SKPIGN
	CALL	RDCHR	;GET CR
	CALL	RDCHR	;GET LF
	JMP	NEWPG1
;
NEWPG	CALL	CRLF
	MVI	A,'L'-40H ;FORMS FEED
	CALL	TYPE	;EJECT
;PRINT TITLE
NEWPG1	CALL	PRTTL0
	CALL	CRLF
	CALL	CRLF
	CALL	PRTTL
	CALL	CRLF
;RESET LINECOUNT
	MVI	A,6
	STA	LINECT
;MATCH A LINE, PRINT IF IT MATCHES
;EXIT IF KEY PRESSED
LOOP	MVI	C,KSTAT
	CALL	BDOS
	DCR	A
	JZ	EXIT
;MATCH FILENAME
	LXI	D,BUFF+WADD1	;WHERE TO STORE NAME READ
	LXI	H,FNAME
	MVI	B,8
	CALL	MATCH
	JC	SKIP	;NAME/TYPE DIDN'T MATCH
	INX	D	;ALLOW FOR '.'
;MATCH FILETYPE
	MVI	B,3	;TYPE
	CALL	MATCH
	JC	SKIP
;SKIP PAST COMMA
;MATCH DISK'S FILENAME
	LXI	D,BUFF+15+WADD2
	LXI	H,DNAME
	MVI	B,8
	CALL	MATCH
	JC	SKIP
	INX	D	;ALLOW FOR '.'
;MATCH DISK'S FILETYPE (NUMBER)
	MVI	B,3
	CALL	MATCH	;TYPE
	JC	SKIP
;
;GOT MATCHING NAME
;
	LXI	H,BUFF
;PRINT MESSAGE UP TO BINARY 0
PRBUF	MOV	A,M
	ORA	A	;END OF BUFF?
	JZ	EOBUF
	CALL	TYPE
	INX	H
	JMP	PRBUF
EOBUF	LDA	ENTRY
	INR	A
	ANI	1
	STA	ENTRY
	JNZ	SKIP
	CALL	CRLF
	LDA	LINECT
	INR	A
	STA	LINECT
	CPI	58
	JC	SKIP
	CALL	SKIPLF
	JMP	NEWPG
;
SKIP	CALL	SKIPLF
	JMP	LOOP
;SKIP TO END OF LINE (L/F)
SKIPLF	CALL	RDCHR
	CPI	0AH	;SKIP TO END
	JNZ	SKIPLF	;OF LINE
	RET
;
;MATCH ENTRY BY READING CHARS
;STORE IN BUFFER POINTED TO BY DE
;MATCH NAME POINTED TO BY HL
;
MATCH	CALL	RDCHR
	STAX	D
	CMP	M
	JNZ	MAT50	;CHECK '?'
MAT25	INX	D
	INX	H
	DCR	B	;MORE?
	JNZ	MATCH
	CALL	RDCHR	;DELETE '.' OR '"'
	ORA	A	;CARRY OFF, SHOWS OK
	RET
MAT50	CPI	'.'	;END OF NAME?
	JZ	MAT100
	CPI	','	;END OF NAME?
	JZ	MAT100
	MOV	A,M	;MATCHING '?'
	CPI	'?'
	JZ	MAT25
MAT75	MVI	A,' '	;PAD
	STAX	D
	INX	D
	INX	H
	DCR	B
	JNZ	MAT75
	STC		;SHOW BAD
	RET
MAT100	MOV	A,M
	CPI	'?'
	JZ	MAT200
	CPI	' '
	JNZ	MAT75
MAT200	MVI	A,' '
	STAX	D
	INX	D
	INX	H
	DCR	B
	JNZ	MAT100
	ORA	A	;MATCH
	RET
;
;READ CHAR FROM DISK
;
RDCHR	PUSH	B
	PUSH	D
	PUSH	H
	LHLD	BUFAD
	MOV	A,H	;TIME TO READ?
	DCR	A
	JNZ	NOREAD
	LXI	D,FCB
	MVI	C,READ
	CALL	BDOS
	ORA	A
	JZ	RDOK
	CALL	ILPRT
	DB	'++READ ERROR OR EARLY EOF++',0
	JMP	EXIT
RDOK	LXI	H,80H
NOREAD	MOV	A,M	;GET CHAR
	INX	H
	SHLD	BUFAD
	POP	H
	POP	D
	POP	B
	CPI	'Z'-40H	;EOF?
	JZ	EOF
	RET
;
CRLF	MVI	A,0DH
	CALL	TYPE
	MVI	A,0AH
;
TYPE	PUSH	B
	PUSH	D
	PUSH	H
	MOV	E,A
	MVI	C,WRCON
	CALL	BDOS
	POP	H
	POP	D
	POP	B
	RET
;
;MOVER - MOVE CHARS FROM (DE) TO (HL), LENGTH IN (B)
;	IF FIRST CHAR = ' ', MOVE ALL '?'
;
MOVER	LDAX	D
	CPI	' '
	JZ	QUEST
;
;MOVE CHARS FROM (DE) TO (HL) FOR LENGTH IN (B)
;
MOVE	LDAX	D	;GET A CHAR
	MOV	M,A
	INX	D
	INX	H
	DCR	B
	JNZ	MOVE
	RET
;
;PAD FILENAME OR TYPE WITH ALL '?'
;
QUEST	MVI	M,'?'
	INX	H
	INX	D
	DCR	B
	JNZ	QUEST
	RET
;
EOF	CALL	ILPRT
	DB	0DH,0AH,'L'-40H,0
	JMP	EXIT
;
;INLINE PRINT ROUTINE
ILPRT	XTHL		;SAVE HL, GET MESSAGE
	MOV	A,M	;GET CHARACTER
ILPLP	CALL	TYPE	;OUTPUT IT
	INX	H	;POINT TO NEXT CHARACTER
	MOV	A,M	;GET NEXT CHARACTER
	ORA	A	;TEST FOR END
	JNZ	ILPLP	;LOOP IF NOT END
	XTHL		;RESTORE HL, RET ADDRESS
	RET
;
	DS	50	;STACK
STACK	DW	0
FNAME	DS	8
FTYPE	DS	3
DNAME	DS	8
DTYPE	DS	3
FCBNAME	DB	'MAST    CAT',0 ;0 = EXTENT #
ENTRY	DB	0	;0/1 = LEFT, RIGHT
BUFAD	DW	100H	;BUFFER PONTER
;
PRTTL	CALL	ILPRT
;
	IF	NOT WIDE
	DB	'  FILE           DISK         '
	DB	'  FILE           DISK'
	ENDIF	;NOT WIDE
;
	IF	WIDE
TTL	DB	'         FILE             DISK         '
	DB	'         FILE             DISK'
	ENDIF	;WIDE
;
	DB	0DH,0AH,0
	RET
;
	IF	NOT WIDE
BUFF	DB	'............   ............   ',0
	ENDIF	;NOT WIDE
;
	IF	WIDE
BUFF	DB	'     ............     ............     ',0
	ENDIF	;WIDE
;
LINECT	DB	0
;
FILMSG	DB	'Files of the form --> '
DSKMSG	DB	0DH,0AH,'On disk(s) with name(s) --> '
DATMSG	DB	0DH,0AH,'As of --> '
NOSPEC	DB	'All files in MAST.CAT'
PRTTL0	CALL	ILPRT
TTL0	DB	0
;		(COMMAND TITLE MOVED HERE)
; * * * * * * * * * * * * * * * * * * * * * * * *
;						*
;BDOS/CBIOS EQUATES (VERSION 5)			*
;(WITH UNREFERENCED EQUATES EDITED OUT)		*
;						*
WRCON	EQU	2	;			*
PRINT	EQU	9	;			*
KSTAT	EQU	11	;1=KEY PRESSED		*
OPEN	EQU	15	;0FFH=NOT FOUND		*
READ	EQU	20	;0=OK, 1=EOF		*
BDOS	EQU	5	;			*
FCB	EQU	5CH 	;			*
; * * * * * * * * * * * * * * * * * * * * * * * *
