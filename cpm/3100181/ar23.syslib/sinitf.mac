;
;  INITFCB -- GIVEN STRING POINTED TO BY HL AND FCB PTED TO BY DE,
;	INIT FCB WITH FILENAME.TYP PTED TO BY HL; FILENAME.TYP MAY
;	CONTAIN EITHER '?' OR '*' FOR WILDCARD SPECIFICATIONS, AND
;	MUST END IN A <SP> OR LESS (LIKE, <CR>)
;
;  ON RETURN, A=0 MEANS NO ERROR
;	      A=1 MEANS FILE NAME TOO LONG
;	      A=2 MEANS FILE TYPE TOO LONG
;

PUTRG	MACRO
	PUSH	B	; SAVE BC, DE, HL
	PUSH	D
	PUSH	H
	ENDM
GETRG	MACRO
	POP	H	; RESTORE HL, DE, BC
	POP	D
	POP	B
	ENDM

INITFCB::
	PUTRG		; SAVE REGISTERS
	MVI	B,33	; NUMBER OF BYTES IN FCB
	PUSH	D	; SAVE PTR TO FCB
	XRA	A	; A=0
;
;  CLEAR FCB W/ZEROES
;
FCBCLR:	
	STAX	D	; STORE ZEROES
	INX	D	; PT TO NEXT
	DCR	B	; COUNT DOWN
	JNZ	FCBCLR
	POP	D	; GET PTR TO FCB
	MVI	B,8	; UP TO 8 CHARS IN FILE NAME
	INX	D	; PT TO FILE NAME
;
;  STORE FILE NAME
;
FCBNAME:
	MOV	A,M	; GET CHAR
	CPI	'.'	; DONE? -- FILL IN REST W/<SP>
	JZ	NMSP
	CPI	'*'	; WILD? -- FILL IN REST W/'?'
	JZ	NMQUES
	CPI	' '+1	; DONE IF <SP> OR LESS
	JC	NMSP
	STAX	D	; STORE CHAR
	INX	D	; PT TO NEXT
	INX	H
	DCR	B	; COUNT DOWN
	JNZ	FCBNAME
	MOV	A,M	; GET NEXT CHAR
	CPI	'.'+1	; MUST BE '.' OR LESS (LIKE, <SP>)
	JC	FCBTYPE
	MVI	A,1	; FILE NAME TOO LONG ERROR
	JMP	FCBDONE
;  FILL IN REST OF FILE NAME W/<SP>
NMSP:	MVI	A,' '	; FILL IN REST OF NAME W/<SP>
	JMP	NMFILL
;  FILL IN REST OF FILE NAME W/'?'
NMQUES:	MVI	A,'?'	; FILL IN REST OF NAME W/'?'
	INX	H	; PT TO '.'
NMFILL:	STAX	D	; STORE CHAR
	INX	D	; PT TO NEXT
	DCR	B	; COUNT DOWN
	JNZ	NMFILL
;
;  STORE FILE TYPE
;
FCBTYPE:
	MVI	B,3	; UP TO 3 CHARS IN FILE TYPE
	MOV	A,M	; GET CHAR AFTER FILE NAME
	CPI	'.'	; EXTENSION FOLLOWS?
	JNZ	TYSP	; MAKE ALL SPACES
	INX	H	; PT TO FILE TYPE
FCBT1:	MOV	A,M	; GET CHAR
	CPI	'*'	; REST '?'
	JZ	TYQUES
	CPI	' '+1	; REST <SP>
	JC	TYSP
	STAX	D	; PUT CHAR
	INX	D	; PT TO NEXT
	INX	H
	DCR	B	; COUNT DOWN
	JNZ	FCBT1
	MOV	A,M	; CHECK FOR MORE
	CPI	' '+1	; MUST BE <SP> OR LESS
	JC	FCBOK
	MVI	A,2	; FILE TYPE TOO LONG ERROR
	JMP	FCBDONE
TYSP:	MVI	A,' '	; <SP> FILL OF FILE TYPE
	JMP	TYFILL
TYQUES:	MVI	A,'?'	; '?' FILL OF FILE TYPE
TYFILL:	STAX	D	; STORE IT
	INX	D	; PT TO NEXT
	DCR	B	; COUNT DOWN
	JNZ	TYFILL
;
;  NO ERRORS
;
FCBOK:
	XRA	A	; A=0 MEANS OK
;
;  INITFCB DONE -- REG A CONTAINS ERROR CODE
;
FCBDONE:
	GETRG		; RESTORE REGISTERS
	RET

	END
