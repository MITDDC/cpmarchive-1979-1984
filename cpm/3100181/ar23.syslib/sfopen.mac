;
;  F$OPEN -- OPEN FILE SPECIFIED BY FCB PTED TO BY DE
;	IF FILE NOT FOUND, ASK IF USER WISHES TO CREATE IT AND DO SO IF YES
;	RETURN W/A=0 IF NO ERROR
;
	EXT	BDOS
	EXT	CAPS
	EXT	CIN
	EXT	COUT
	EXT	CRLF
	EXT	PRINT

PUTRG	MACRO
	PUSH	B	; SAVE BC, DE, HL
	PUSH	D
	PUSH	H
	ENDM
GETRG	MACRO
	POP	H	; RESTORE HL, DE, BC
	POP	D
	POP	B
	ENDM

F$OPEN::
	PUTRG		; SAVE REGISTERS
	MVI	C,B$OPEN	; OPEN FILE
	PUSH	D	; SAVE DE
	CALL	BDOS	; OPEN FILE
	CPI	255	; NOT PRESENT
	JNZ	OPENOK	; OK
	CALL	CRLF	; NEW LINE
	CALL	PRINT	; PRINT PROMPT
	DB	'F$OPEN -- File ',0
	POP	H	; GET PTR TO FCB
	PUSH	H	; REPLACE IT
	MVI	B,8	; 8 BYTES IN FCB NAME
F$O1:	INX	H	; PT TO CHAR
	MOV	A,M	; GET CHAR
	CALL	COUT	; PRINT IT
	DCR	B	; COUNT DOWN
	JNZ	F$O1
	MVI	A,'.'	; DECIMAL
	CALL	COUT
	MVI	B,3	; 3 BYTES IN FCB TYPE
F$O2:	INX	H	; PT TO CHAR
	MOV	A,M	; GET CHAR
	CALL	COUT	; PRINT IT
	DCR	B	; COUNT DOWN
	JNZ	F$O2
	CALL	PRINT	; PRINT REST OF PROMPT
	DB	' not found -- Create One (Y/N)? ',0
	CALL	CIN	; GET RESPONSE
	CALL	CAPS	; CAPITALIZE
	PUSH	PSW	; SAVE RESPONSE
	CALL	COUT	; ECHO
	CALL	CRLF	; NEW LINE
	POP	PSW	; RESTORE RESPONSE
	CPI	'Y'	; OK?
	JNZ	OPENAB	; ABORT
	POP	D	; GET PTR TO FCB
	MVI	C,B$CREAT	; MAKE FILE
	CALL	BDOS
	XRA	A	; A=0 FOR OK
	JMP	OPENDN	; DONE AND OK
OPENAB:	MVI	A,0FFH	; ABORT ERROR
	POP	D	; CLEAR STACK
	JMP	OPENDN
OPENOK:	XRA	A	; OPEN OK
	POP	D	; CLEAR STACK
OPENDN:	GETRG		; RESTORE REGISTERS
	RET

B$OPEN	EQU	15	; OPEN FILE
B$CREAT	EQU	22	; CREATE FILE

	END
